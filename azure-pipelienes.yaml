name: $(BuildID)
jobs:
  - job: Restart_Jmeter_Slaves
    pool:
      vmImage: 'ubuntu-latest'

    variables:
      timeout: 5
      cluster_name: jubernetes
      cluster_namespace: jubernetes2
      cluster_url: https://jubernetes-dns-782297cf.hcp.westeurope.azmk8s.io:443 #get it from kubectl cluster-info
    timeoutInMinutes: $(timeout)

    steps:
      # Updating the python version available on the linux agent
      - task: UsePythonVersion@0
        inputs:
          versionSpec: '3.x'
          architecture: 'x64'

      # Updating pip to latest
      #- script: python -m pip install --upgrade pip
       # displayName: 'Upgrade pip'

      # Updating to latest Azure CLI version.
      #- script: pip install --pre azure-cli --extra-index-url https://azurecliprod.blob.core.windows.net/edge
      #  displayName: 'upgrade azure cli'

      - script: |
          echo $(System.AccessToken) | az login
          az aks get-credentials --resource-group jmeter-group --name jubernetes
        displayName: 'Get Kubernetes Credentials'

      - script: az --version
        displayName: 'Show Azure CLI version'

      - script: az extension add -n azure-devops
        displayName: 'Install Azure DevOps Extension'

      - script: echo ${AZURE_DEVOPS_CLI_PAT} | az devops login
        env:
          AZURE_DEVOPS_CLI_PAT: $(System.AccessToken)
        displayName: 'Login Azure DevOps Extension'

      - script: az devops configure --defaults organization=https://dev.azure.com/gstarczewski project="jmeter" --use-git-aliases true
        displayName: 'Set default Azure DevOps organization and project'

      - script: |
          az pipelines build list
          git pr list
        displayName: 'Show build list and PRs'

      - script: |
          echo $(System.AccessToken) | az devops login
          kubectl config set-cluster $(cluster_name) --server=$(cluster_url)
          kubectl config use-context $(cluster_name)
          echo "Current state"
          kubectl get pods -n $(cluster_namespace)
          kubectl scale deployment jmeter-slaves --replicas=0 -n $(cluster_namespace)
        displayName: 'Scale to 0'

      - script: |
          echo "Rescaling cluster"
          kubectl get pods -n jubernetes2

        displayName: 'Dispay status'

