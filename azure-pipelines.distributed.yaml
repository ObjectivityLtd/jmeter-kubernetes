#This pipeline is configured with PAT so requires TFA - need to be refactored so it is not required
#restarting is done by scaling to 0 and back to desired number of slaves = all pods - 1
name: $(BuildID)

schedules:
#every 5 minutes
- cron: "0 */2 * * *"
  displayName: Daily midnight build
  branches:
    include:
    - master
  always: true

variables:
  cluster_name: jubernetes
  cluster_resource_group: jmeter-group
  cluster_namespace: jubernetes2
  kubernetesServiceConnection: pupa2
  scale_down_replicas: 0
  scale_up_replicas: 2
  scale_up_replicas_master: 1
  service: jmeter-slaves
  service-master: jmeter-master

jobs:
  - job: JMeter_Tests
    displayName: JMeter Tests Regression Pipeline
    pool:
      vmImage: 'ubuntu-latest'
    timeoutInMinutes: 5
    steps:
    - task: KubernetesManifest@0
      displayName: Scale slaves to $(scale_down_replicas)
      inputs:
        kubernetesServiceConnection: $(kubernetesServiceConnection)
        action: scale
        kind: deployment
        name: $(service)
        replicas: $(scale_down_replicas)
        namespace: $(cluster_namespace)

    - task: KubernetesManifest@0
      displayName: Scale master to $(scale_down_replicas)
      inputs:
        kubernetesServiceConnection: $(kubernetesServiceConnection)
        action: scale
        kind: deployment
        name: $(service-master)
        replicas: $(scale_down_replicas)
        namespace: $(cluster_namespace)

    - task: KubernetesManifest@0
      displayName: Scale master to $(scale_up_replicas_master)
      inputs:
        kubernetesServiceConnection: $(kubernetesServiceConnection)
        action: scale
        kind: deployment
        name: $(service-master)
        replicas: $(scale_up_replicas_master)
        namespace: $(cluster_namespace)

    - task: KubernetesManifest@0
      displayName: Scale slaves to $(scale_up_replicas)
      inputs:
        kubernetesServiceConnection: $(kubernetesServiceConnection)
        action: scale
        kind: deployment
        name: $(service)
        replicas: $(scale_up_replicas)
        namespace: $(cluster_namespace)

    - task: Kubernetes@1
      displayName: Login to cluster $(cluster_name)
      inputs:
        command: login
        connectionType: Kubernetes Service Connection
        kubernetesServiceEndpoint: $(kubernetesServiceConnection)

    - task: ShellScript@2
      displayName: JMeter tests
      inputs:
        scriptPath: start_test_from_script.sh
        args: $(threads)