# Maven
# Build your Java project and run tests with Apache Maven.
# Add steps that analyze code, save build artifacts, deploy, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/java
#https://dev.azure.com/gstarczewski/jmeter/_apis/build/builds?api-version=5.1
name: $(BuildID)
trigger: none

jobs:
  - job: jmeter_pipeline_maven
    pool: private
    variables:
      - group: secrets
      #jmeter
      - name: report_dir
        value: $(System.DefaultWorkingDirectory)/jmeter/as_maven/target/jmeter/reports
      - name: artifact_name
        value: jmeter_report
      - name: jmeter_scenario_pom
        value: 'jmeter/as_maven/pom.xml'
      - name: xmx
        value: '2048'
      - name: jmeter_scenario_name
        value: 'cloudssky'
      - name: script_path
        value: traditional
      - name: script_path_arti
        value: kubernetes/bin

      #artifactory
      - name: base_url
        value: http://10.1.137.108:8081
      - name: script_path_arti
        value: kubernetes/bin
      - name: repo
        value:  jmeter-artifacts
      - name: project
        value: cloudssky
      - name: tribe
        value: testing

      #remote farm
      - name: server_xmx
        value: 2048m
      - name: server_xms
        value: 1024m
      - name: jmeter_server_version
        value: apache-jmeter-5.2.1
        #space separated ip1 ip2 ...
      - name: jmeter_servers
        value: 10.1.137.110
      - name: flask_control_port
        value: 5000

    timeoutInMinutes: 5
    steps:

      - bash: |
          servers=$(echo $(jmeter_servers) | sed "s/ /,/g")
          echo "##vso[task.setvariable variable=jmeter_servers_maven]${servers}"
        displayName: 'Transforming remote ends to maven format'

      - task: ShellScript@2
        inputs:
          scriptPath: $(script_path)/resetSlaves.sh
          args: $(flask_control_port) $(jmeter_server_version) $(server_xms) $(server_xmx) $(curl_basic_auth) $(jmeter_servers)
        displayName: 'Reset cluster: $(jmeter_servers)'

      - task: Maven@3
        displayName: Run $(jmeter_scenario_name) with maven
        inputs:
          mavenPomFile: $(jmeter_scenario_pom)
          javaHomeOption: 'JDKVersion'
          jdkVersionOption: '1.8'
          jdkArchitectureOption: 'x64'
          publishJUnitResults: true
          testResultsFiles: '**/surefire-reports/TEST-*.xml'
          goals: 'clean verify -Dxmx=$(xmx) -Djmeter_servers=$(jmeter_servers_maven)'

      - task: ShellScript@2
        inputs:
          scriptPath: $(script_path)/stopSlaves.sh
          args: $(flask_control_port) $(curl_basic_auth) $(jmeter_servers)
        displayName: 'Stop cluster: $(jmeter_servers)'

      - task: ShellScript@2
        inputs:
          scriptPath: $(script_path_arti)/upload_to_artifactory.sh
          args: $(artifact_name).zip $(report_dir) $(base_url) $(repo) $(tribe)/$(project) $(secret_artifactory_token)
        displayName: Artifactory upload

      - task: PublishPipelineArtifact@1
        displayName: Archive Report for $(jmeter_scenario_name)
        inputs:
          path: $(report_dir)
          artifact: $(artifact_name)