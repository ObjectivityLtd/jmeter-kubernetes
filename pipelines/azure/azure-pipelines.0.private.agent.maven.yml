# Maven
# Build your Java project and run tests with Apache Maven.
# Add steps that analyze code, save build artifacts, deploy, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/java
#https://dev.azure.com/gstarczewski/jmeter/_apis/build/builds?api-version=5.1
name: $(BuildID)
trigger:
  - master

jobs:
  - job: jmeter_pipeline_maven
    pool: private
    variables:
      #jmeter
      report_dir:  $(System.DefaultWorkingDirectory)/jmeter/as_maven/target/jmeter/reports
      jmeter_scenario_pom: 'jmeter/as_maven/pom.xml'
      xmx: '2048'
      jmeter_scenario_name: 'cloudssky'
      #artifactory
      base_url: http://10.1.137.108:8081
      repo: jmeter-artifacts
      project: cloudssky

    timeoutInMinutes: 5
    steps:

      - task: Maven@3
        displayName: Run $(jmeter_scenario_name) with maven
        inputs:
          mavenPomFile: $(jmeter_scenario_pom)
          javaHomeOption: 'JDKVersion'
          jdkVersionOption: '1.8'
          jdkArchitectureOption: 'x64'
          publishJUnitResults: true
          testResultsFiles: '**/surefire-reports/TEST-*.xml'
          goals: 'verify -Dxmx=$(xmx)'

      - task: PublishPipelineArtifact@1
        displayName: Archive Report for $(jmeter_scenario_name)
        inputs:
          path: $(report_dir)
          artifact: JmeterReport

      - script: |
          id=$(date | sed "s/ /_/g" | sed "s/:/_/g") && zip -r report.zip  $(report_dir)
          curl -H "X-JFrog-Art-Api:AKCp5ekcNd5Mnv4LKsUTqqK8NSKwisBum8zRB37H5sMLLHW8KTc6EfN3e2cLmt99JyTWzA3Bh" -X PUT "$(base_url)/artifactory/$(repo)/$(project)/${id}/file.txt" -T report.zip
        displayName: 'Upload to'